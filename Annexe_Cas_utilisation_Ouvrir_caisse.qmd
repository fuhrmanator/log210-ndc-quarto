# Cas d'utilisation - Ouvrir la caisse {#sec-CU_Ouvrir_caisse}

Le contexte est l'étude de cas du système POS NextGen, notamment le scénario principal du cas d'utilisation *Ouvrir la caisse* (en anglais *Cash In*).
C'est l'acte d'un caissier ou d'une caissière qui arrive avec son tiroir-caisse contenant déjà de l'argent, qui s'authentifie sur la caisse (le registre) et qui saisit le montant en espèces dans le tiroir-caisse.

::: {.callout-note}
En effet, ce cas d'utilisation n'est pas présenté en détail par @craig_uml_2005, bien qu'il soit mentionné dans son livre dans un diagramme de cas d'utilisation.
Alors, nous proposons pour cet exercice des modifications au modèle du domaine présenté par Larman afin de modéliser cette fonctionnalité additionnelle du logiciel.
:::

```{.plantuml #fig-DCU_ouvrir_la_caisse caption='Diagramme de cas d\'utilisation pour le système NextGen.'}
@startuml
skinparam style strictuml
skinparam defaultFontName Arial
skinparam backgroundcolor transparent
scale 0.5
left to right direction
skinparam packageStyle rect
skinparam defaulttextalignment center
actor Client
actor Caissier
actor Manager
rectangle "Système des\nventes" <<acteur>> as SV
actor "Administrateur\nsystème" as AS
actor "Service\nd'autorisation\ndes paiements" as SAP
rectangle "Calculateur de\ntaxes" <<acteur>> as CT
rectangle "Système de\ncomptabilité" <<acteur>> as SC
rectangle "Système de\nressources\nhumaines" <<acteur>> as SRH
rectangle "NextGen" {
  (...) as other
  (Traiter une vente) as TV
  (Traiter les retours) as TR
  (Ouvrir la caisse) as OLC #yellow
  (Analyser l'activité) as AA
  (Gérer la sécurité) as GS
  (Gérer les utilisateurs) as GU
  Client -d- TV
  Client -d- TR
  Caissier -d- TV
  Caissier -d- TR
  Caissier -d- OLC
  Manager -d- TV
  Manager -d- TR
  TV -d- SAP
  TV -d- CT
  TV -d- SC
  OLC -d- SRH
  SV -d- AA
  AS -d- GS
  AS -d- GU
}
@enduml
```

## Terminologie

Quelques termes du domaine d'affaires doivent être compris avant de procéder:

![Plateau-billets et tiroir-caisse. Capture d'écran de la vidéo sur [YouTube](https://youtu.be/lth_lAacXVQ?t=34).](images/Series4000CashDrawerProductTrainingVideo_screenshot_youtube.png)

\filbreak
Tiroir-caisse
: C'est la partie de la caisse qui s'ouvre, dans laquelle on peut placer un plateau-billets.

Plateau-billets
: C'est un contenant pour les billets de banque et les pièces de monnaie qui facilite le changement de personnel à une caisse.
Chaque caissier ou caissière possède un plateau-billets et l'apporte lorsqu'il est au début ou à la fin de son quart de travail.

## Cas d'utilisation: Ouvrir la caisse

**Acteur principal: Caissier ou Caissière**

**Préconditions:** La caisse est libre et son tiroir-caisse est vide (il n'y a pas de plateau dedans).

**Garanties de succès (postconditions):** La caissière ou le caissier est authentifié.
Son plateau-billets est placé dans le tiroir-caisse, et son identificateur est enregistré.
Le montant d'argent du plateau est enregistré.
L'heure de l'arrivée du caissier ou de la caissière est enregistrée.

**Scénario principal (succès)**

1. Le Caissier ou la caissière arrive à la caisse avec son plateau-billets.

2. Le Caissier ou la caissière saisit son identifiant et son mot de passe dans la boîte de dialogue d'authentification.

3. Le Système authentifie le Caissier ou la caissière.

4. Le Système ouvre le tiroir-caisse et demande au Caissier ou à la caissière de poser son plateau dans le tiroir-caisse.

5. Le Caissier ou la caissière pose son plateau dans le tiroir-caisse.

6. Le Système reconnaît l'identificateur du plateau.

7. Le Système demande au Caissier ou à la caissière de saisir le montant d'argent du plateau.

8. Le Caissier ou la caissière saisit le montant d'argent du plateau.

9. Le Système demande au Caissier ou à la caissière de fermer le tiroir-caisse.

10. Le Caissier ou la caissière ferme le tiroir-caisse.

**Spécifications particulières:**

Les caisses sont configurées avec un modèle de plateau-billets comme celui-ci: [(voir exemple sur
YouTube.)](http://www.youtube.com/watch?feature=player_detailpage&v=lth_lAacXVQ#t=32s)

**Fréquence d'occurrence:** Normalement, au début du quart de travail de chaque caissier ou caissière.

## Modèle du domaine partiel

Voici un exemple pour le système POS NextGen. 
Notez les nouvelles classes conceptuelles **PlateauBillets** (un objet physique) et **MisePlateau** (une transaction) faisant partie du scénario d'*Ouvrir la caisse*.

![Modèle du domaine partiel du système POS NextGen avec deux nouvelles classes conceptuelles MisePlateau et PlateauBillets, qui modélisent des éléments du cas d'utilisation "Ouvrir la caisse".](images/MDD_POS_NextGen_export.svg)

On remarque que lorsqu'un Registre (Caisse) n'a pas de Caissier (l'état du système au début du cas d'utilisation), l'objet Registre n'est associé à aucun objet Caissier. 
Nous avons donc modifié les cardinalités de l'association en conséquence. 
C'est une différence par rapport au modèle du domaine de base présenté par Larman, qui n'avait pas considéré ce cas d'utilisation, bien qu'il soit dans l'ensemble des spécifications du système.

Les associations en rouge sont celles qui sont affectées par la dynamique de ce cas d'utilisation.

\clearpage

## Diagramme de séquence système (DSS)

La @fig-DSS_ouvrir_la_caisse est le diagramme de séquence système (DSS) pour le scénario "Ouvrir la caisse". 

```{.plantuml #fig-DSS_ouvrir_la_caisse caption='Diagramme de séquence système (DSS) pour le scénario "Ouvrir la caisse".'}
@startuml
skinparam style strictuml
skinparam defaultFontName Arial
skinparam SequenceMessageAlign center
title Scénario : Ouvrir la caisse
actor ":Caissier" as C
participant ":Système" as S
C->S: démarrerOuvrirCaisse()
C->S: authentifier(identifiant : String, mdp : String)
C<<--S: confirmation, ouverture du tiroir
C->S: poserPlateau(identifiant : String)
C->S: saisirMontant(montant : Monnaie)
C->S: fermerTiroir()
@enduml
```

\clearpage

## Contrats d'opération

Voici les contrats pour chaque opération système.

**Opération: démarrerOuvrirCaisse()**

**Postconditions:**

-   Une instance *mp* de MisePlateau a été créée.

**Opération: authentifier(identifiant: String, mdp: String)**

**Postconditions:**

-   *mp* a été associée à un Caissier, sur la base de correspondance avec **identifiant**.
-   Le Registre en cours a été associé à un Caissier, sur la base de correspondance avec **identifiant**.

**Opération: poserPlateau(identifiant: String)**

**Postconditions:**

-   *mp* a été associée à un PlateauBillets, sur la base de correspondance avec **identifiant**.
-   Le Registre en cours a été associé à un PlateauBillets, sur la base de correspondance avec **identifiant**.

**Opération: saisirMontant(montant: Monnaie)**

**Postcondition:**

-   *mp.montant* est devenu **montant**.

**Opération: fermerTiroir()**

**Postconditions:**

-   *mp.dateHeure* est devenue la date et l'heure actuelles.
-   *mp* a été associée à GrandLivre.
-   *mp* a été associée à Registre.

